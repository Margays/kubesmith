---
# tasks file for containerd
- name: Create cache dir
  delegate_to: localhost
  run_once: true
  ansible.builtin.file:
    path: "{{ cri_containerd_cache_dir }}"
    state: directory
    mode: '0755'

- name: Download containerd
  delegate_to: localhost
  run_once: true
  ansible.builtin.get_url:
    url: "{{ cri_containerd_release_url.replace('\n', '') }}"
    dest: "{{ cri_containerd_cache_dir }}/containerd.tar.gz"
    mode: '0755'

- name: Download containerd systemd service file
  delegate_to: localhost
  run_once: true
  ansible.builtin.get_url:
    url: "{{ cri_containerd_systemd_file_url }}"
    dest: "{{ cri_containerd_cache_dir }}/containerd.service"
    mode: '0755'

- name: Setup containerd in /usr/local
  become: true
  ansible.builtin.unarchive:
    src: "{{ cri_containerd_cache_dir }}/containerd.tar.gz"
    dest: /usr/local

- name: Create containerd.service dir
  become: true
  ansible.builtin.file:
    path: /usr/local/lib/systemd/system/
    state: directory
    mode: '0755'

- name: Create containerd.service
  become: true
  ansible.builtin.copy:
    src: "{{ cri_containerd_cache_dir }}/containerd.service"
    dest: /usr/local/lib/systemd/system/containerd.service
    owner: root
    group: root
    mode: '0644'

- name: Enable containerd.service
  become: true
  ansible.builtin.systemd_service:
    name: containerd
    state: started
    enabled: true
    daemon_reload: true

- name: Ensure containerd config dir exists
  become: true
  ansible.builtin.file:
    path: "{{ cri_containerd_config_dir }}"
    state: directory
    

- name: Configure containerd
  become: true
  ansible.builtin.copy:
    src: "{{ cri_containerd_config_file }}"
    dest: "{{ cri_containerd_config_dst }}"
    owner: root
    group: root
    mode: '0644'
  notify:
    - Restart containerd

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
